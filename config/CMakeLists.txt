cmake_minimum_required(VERSION 3.20)

project(Liri
    DESCRIPTION "Liri"
    LANGUAGES CXX C
)

## Add some paths to check for CMake modules:
set(LIRI_LOCAL_ECM TRUE)
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/libraries/cmake-shared/modules")

## Liri specific setup common for all modules:
include(LiriSetup)

## Add sub-projects (respect dependency order):
add_subdirectory(libraries/cmake-shared)
if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/libraries/fluid")
    add_subdirectory(libraries/fluid)
endif()
if(UNIX AND NOT ANDROID)
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/libraries/qtaccountsservice")
        add_subdirectory(libraries/qtaccountsservice)
    endif()
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/libraries/qtudev")
        add_subdirectory(libraries/qtudev)
    endif()
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/libraries/qtgsettings")
        add_subdirectory(libraries/qtgsettings)
    endif()
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/desktop/libliri")
        add_subdirectory(desktop/libliri)
    endif()
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/apps/appcenter")
        add_subdirectory(apps/appcenter)
    endif()
endif()
if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/apps/browser")
    add_subdirectory(apps/browser)
endif()
if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/apps/calculator")
    add_subdirectory(apps/calculator)
endif()
if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/apps/files")
    add_subdirectory(apps/files)
endif()
if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/apps/player")
    add_subdirectory(apps/player)
endif()
if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/apps/text")
    add_subdirectory(apps/text)
endif()
if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/apps/terminal")
    add_subdirectory(apps/terminal)
endif()
if(UNIX AND NOT ANDROID)
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/desktop/eglfs")
        add_subdirectory(desktop/eglfs)
    endif()
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/desktop/wayland")
        add_subdirectory(desktop/wayland)
    endif()
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/desktop/qtintegration")
        add_subdirectory(desktop/qtintegration)
    endif()
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/desktop/session")
        add_subdirectory(desktop/session)
    endif()
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/desktop/networkmanager")
        add_subdirectory(desktop/networkmanager)
    endif()
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/desktop/pulseaudio")
        add_subdirectory(desktop/pulseaudio)
    endif()
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/desktop/power-manager")
        add_subdirectory(desktop/power-manager)
    endif()
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/desktop/qml-xwayland")
        add_subdirectory(desktop/qml-xwayland)
    endif()
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/desktop/screencast")
        add_subdirectory(desktop/screencast)
    endif()
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/desktop/screenshot")
        add_subdirectory(desktop/screenshot)
    endif()
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/desktop/settings")
        add_subdirectory(desktop/settings)
    endif()
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/desktop/shell")
        add_subdirectory(desktop/shell)
    endif()
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/desktop/initial-setup")
        add_subdirectory(desktop/initial-setup)
    endif()
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/desktop/xdg-desktop-portal-liri")
        add_subdirectory(desktop/xdg-desktop-portal-liri)
    endif()
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/desktop/themes")
        add_subdirectory(desktop/themes)
    endif()
endif()
if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/desktop/wallpapers")
    add_subdirectory(desktop/wallpapers)
endif()
if(LINUX AND NOT ANDROID)
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/os/calamares-branding")
        add_subdirectory(os/calamares-branding)
    endif()
endif()
